<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

Listen 9761 

<VirtualHost *:9761>
    # ServerAdmin webmaster@dummy-host.example.com DocumentRoot "E:/xampp/htdocs/dummy-host.example.com"
      ServerName lastmile
    ErrorLog "logs/WebSockets.log"
    CustomLog "logs/WebSockets.log" common
	
#		<Proxy *>
#        Order deny,allow Allow from all
#		</Proxy>
	
		ProxyRequests off
		ProxyPreserveHost on
		 SSLEngine on
# 		 SSLProxyEngine on 
		SSLCertificateFile "certificates/ssl.crt/ca.crt"	
		 SSLCertificateKeyFile "certificates/ssl.key/ca.key"
#	 SSLVerifyClient none SSLCACertificateFile "conf/ssl.crt/lastmile.crt"
		
		<Proxy balancer://locationBalancer>
			BalancerMember ws://localhost:10590
			ProxySet lbmethod=byrequests
		</Proxy>
		
		
		RewriteEngine on
				
		RewriteCond %{REQUEST_URI} ^/1/(.*)
		RewriteRule /1 ws://localhost:%1 [P]
		ProxyPassReverse /1 ws://localhost:%1
		
		
		
#		<location /updatelocation>
#			ProxyPass balancer://locationBalancer/updatelocation/ ProxyPassReverse balancer://locationBalancer/updatelocation/ </location>

		RewriteCond %{REQUEST_URI} ^/updatelocation
		RewriteRule /updatelocation balancer://locationBalancer/updatelocation [P]
		ProxyPassReverse /updatelocation balancer://locationBalancer/updatelocation
	
</VirtualHost>

