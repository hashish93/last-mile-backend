/*
 * Created on 8 Mar 2017 ( Time 15:31:55 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.appzoneltd.lastmile.microservice.returnworkflow.business.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "pickup_request"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "pickup_request", schema = "lastmile_request")
// Define named queries here
@NamedQueries({
		@NamedQuery(name = "PickupRequestEntity.countAll", query = "SELECT COUNT(x) FROM PickupRequestEntity x") })
public class PickupRequestEntity implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@Column(name = "pickup_request_id", nullable = false)
	private Long pickupRequestId;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "requesttime")
	private Date requesttime;

	@Column(name = "pickuplongitude", length = 50)
	private String pickuplongitude;

	@Column(name = "pickuplatitude", length = 50)
	private String pickuplatitude;

	@Column(name = "hub_id")
	private Long hubId;

	@Column(name = "requester_id")
	private Long requesterId;

	public Long getRequesterId() {
		return requesterId;
	}

	public void setRequesterId(Long requesterId) {
		this.requesterId = requesterId;
	}

	@Column(name = "pickupwasellocation", length = 200)
	private String pickupwasellocation;

	@Column(name = "pickupformatedaddress", length = 250)
	private String pickupformatedaddress;

	@Column(name = "time_from", length = 50)
	private String timeFrom;

	@Column(name = "time_to", length = 50)
	private String timeTo;

	@Temporal(TemporalType.DATE)
	@Column(name = "pickupdate")
	private Date pickupdate;

	@Column(name = "recipientname", length = 50)
	private String recipientname;

	@Column(name = "recipientmobile", length = 20)
	private String recipientmobile;

	@Column(name = "recipientlongitude", length = 50)
	private String recipientlongitude;

	@Column(name = "recipientlatitude", length = 50)
	private String recipientlatitude;

	@Column(name = "recipientwasellocation", length = 200)
	private String recipientwasellocation;

	@Column(name = "recipientformatedaddress", length = 250)
	private String recipientformatedaddress;

	@Column(name = "recipientadditionalinfo", length = 250)
	private String recipientadditionalinfo;

	@Column(name = "pickup_service_type_id")
	private Long pickupServiceTypeId;

	@Column(name = "additionalservices", length = 200)
	private String additionalservices;

	@Column(name = "labelingtext", length = 250)
	private String labelingtext;

	@Column(name = "paymenttype", length = 100)
	private String paymenttype;

	@Column(name = "paymentmethod", length = 100)
	private String paymentmethod;

	@Column(name = "description", length = 250)
	private String description;

	@Column(name = "version", nullable = false)
	private Long version;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created")
	private Date created;

	@Column(name = "request_status", length = 50)
	private String requestStatus;

	@Column(name = "countrycode", length = 50)
	private String countryCode;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public PickupRequestEntity() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setPickupRequestId(Long pickupRequestId) {
		this.pickupRequestId = pickupRequestId;
	}

	public Long getPickupRequestId() {
		return this.pickupRequestId;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : requesttime ( timestamptz )
	public void setRequesttime(Date requesttime) {
		this.requesttime = requesttime;
	}

	public Date getRequesttime() {
		return this.requesttime;
	}

	// --- DATABASE MAPPING : pickuplongitude ( varchar )
	public void setPickuplongitude(String pickuplongitude) {
		this.pickuplongitude = pickuplongitude;
	}

	public String getPickuplongitude() {
		return this.pickuplongitude;
	}

	// --- DATABASE MAPPING : pickuplatitude ( varchar )
	public void setPickuplatitude(String pickuplatitude) {
		this.pickuplatitude = pickuplatitude;
	}

	public String getPickuplatitude() {
		return this.pickuplatitude;
	}

	// --- DATABASE MAPPING : hub_id ( int8 )
	public void setHubId(Long hubId) {
		this.hubId = hubId;
	}

	public Long getHubId() {
		return this.hubId;
	}

	// --- DATABASE MAPPING : pickupwasellocation ( varchar )
	public void setPickupwasellocation(String pickupwasellocation) {
		this.pickupwasellocation = pickupwasellocation;
	}

	public String getPickupwasellocation() {
		return this.pickupwasellocation;
	}

	// --- DATABASE MAPPING : pickupformatedaddress ( varchar )
	public void setPickupformatedaddress(String pickupformatedaddress) {
		this.pickupformatedaddress = pickupformatedaddress;
	}

	public String getPickupformatedaddress() {
		return this.pickupformatedaddress;
	}

	// --- DATABASE MAPPING : time_from ( varchar )
	public void setTimeFrom(String timeFrom) {
		this.timeFrom = timeFrom;
	}

	public String getTimeFrom() {
		return this.timeFrom;
	}

	// --- DATABASE MAPPING : time_to ( varchar )
	public void setTimeTo(String timeTo) {
		this.timeTo = timeTo;
	}

	public String getTimeTo() {
		return this.timeTo;
	}

	// --- DATABASE MAPPING : pickupdate ( date )
	public void setPickupdate(Date pickupdate) {
		this.pickupdate = pickupdate;
	}

	public Date getPickupdate() {
		return this.pickupdate;
	}

	// --- DATABASE MAPPING : recipientname ( varchar )
	public void setRecipientname(String recipientname) {
		this.recipientname = recipientname;
	}

	public String getRecipientname() {
		return this.recipientname;
	}

	// --- DATABASE MAPPING : recipientmobile ( varchar )
	public void setRecipientmobile(String recipientmobile) {
		this.recipientmobile = recipientmobile;
	}

	public String getRecipientmobile() {
		return this.recipientmobile;
	}

	// --- DATABASE MAPPING : recipientlongitude ( varchar )
	public void setRecipientlongitude(String recipientlongitude) {
		this.recipientlongitude = recipientlongitude;
	}

	public String getRecipientlongitude() {
		return this.recipientlongitude;
	}

	// --- DATABASE MAPPING : recipientlatitude ( varchar )
	public void setRecipientlatitude(String recipientlatitude) {
		this.recipientlatitude = recipientlatitude;
	}

	public String getRecipientlatitude() {
		return this.recipientlatitude;
	}

	// --- DATABASE MAPPING : recipientwasellocation ( varchar )
	public void setRecipientwasellocation(String recipientwasellocation) {
		this.recipientwasellocation = recipientwasellocation;
	}

	public String getRecipientwasellocation() {
		return this.recipientwasellocation;
	}

	// --- DATABASE MAPPING : recipientformatedaddress ( varchar )
	public void setRecipientformatedaddress(String recipientformatedaddress) {
		this.recipientformatedaddress = recipientformatedaddress;
	}

	public String getRecipientformatedaddress() {
		return this.recipientformatedaddress;
	}

	// --- DATABASE MAPPING : recipientadditionalinfo ( varchar )
	public void setRecipientadditionalinfo(String recipientadditionalinfo) {
		this.recipientadditionalinfo = recipientadditionalinfo;
	}

	public String getRecipientadditionalinfo() {
		return this.recipientadditionalinfo;
	}

	// --- DATABASE MAPPING : pickup_service_type_id ( int8 )
	public void setPickupServiceTypeId(Long pickupServiceTypeId) {
		this.pickupServiceTypeId = pickupServiceTypeId;
	}

	public Long getPickupServiceTypeId() {
		return this.pickupServiceTypeId;
	}

	// --- DATABASE MAPPING : additionalservices ( varchar )
	public void setAdditionalservices(String additionalservices) {
		this.additionalservices = additionalservices;
	}

	public String getAdditionalservices() {
		return this.additionalservices;
	}

	// --- DATABASE MAPPING : labelingtext ( varchar )
	public void setLabelingtext(String labelingtext) {
		this.labelingtext = labelingtext;
	}

	public String getLabelingtext() {
		return this.labelingtext;
	}

	// --- DATABASE MAPPING : paymenttype ( varchar )
	public void setPaymenttype(String paymenttype) {
		this.paymenttype = paymenttype;
	}

	public String getPaymenttype() {
		return this.paymenttype;
	}

	// --- DATABASE MAPPING : paymentmethod ( varchar )
	public void setPaymentmethod(String paymentmethod) {
		this.paymentmethod = paymentmethod;
	}

	public String getPaymentmethod() {
		return this.paymentmethod;
	}

	// --- DATABASE MAPPING : description ( varchar )
	public void setDescription(String description) {
		this.description = description;
	}

	public String getDescription() {
		return this.description;
	}

	// --- DATABASE MAPPING : version ( int8 )
	public void setVersion(Long version) {
		this.version = version;
	}

	public Long getVersion() {
		return this.version;
	}

	// --- DATABASE MAPPING : created ( timestamptz )
	public void setCreated(Date created) {
		this.created = created;
	}

	public Date getCreated() {
		return this.created;
	}

	// --- DATABASE MAPPING : request_status ( varchar )
	public void setRequestStatus(String requestStatus) {
		this.requestStatus = requestStatus;
	}

	public String getRequestStatus() {
		return this.requestStatus;
	}

	public String getCountryCode() {
		return countryCode;
	}

	public void setCountryCode(String countryCode) {
		this.countryCode = countryCode;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		sb.append(pickupRequestId);
		sb.append("]:");
		sb.append(requesttime);
		sb.append("|");
		sb.append(pickuplongitude);
		sb.append("|");
		sb.append(pickuplatitude);
		sb.append("|");
		sb.append(hubId);
		sb.append("|");
		sb.append(pickupwasellocation);
		sb.append("|");
		sb.append(pickupformatedaddress);
		sb.append("|");
		sb.append(timeFrom);
		sb.append("|");
		sb.append(timeTo);
		sb.append("|");
		sb.append(pickupdate);
		sb.append("|");
		sb.append(recipientname);
		sb.append("|");
		sb.append(recipientmobile);
		sb.append("|");
		sb.append(recipientlongitude);
		sb.append("|");
		sb.append(recipientlatitude);
		sb.append("|");
		sb.append(recipientwasellocation);
		sb.append("|");
		sb.append(recipientformatedaddress);
		sb.append("|");
		sb.append(recipientadditionalinfo);
		sb.append("|");
		sb.append(pickupServiceTypeId);
		sb.append("|");
		sb.append(additionalservices);
		sb.append("|");
		sb.append(labelingtext);
		sb.append("|");
		sb.append(paymenttype);
		sb.append("|");
		sb.append(paymentmethod);
		sb.append("|");
		sb.append(description);
		sb.append("|");
		sb.append(version);
		sb.append("|");
		sb.append(created);
		sb.append("|");
		sb.append(requestStatus);
		return sb.toString();
	}

}
