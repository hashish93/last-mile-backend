/*
 * Created on 28 Dec 2016 ( Time 15:20:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.appzoneltd.lastmile.microservice.details.dao.entity;

import java.io.Serializable;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

@Entity
@Table(name = "static_content", schema = "lastmile_static_content_server")

@NamedQueries({
		@NamedQuery(name = "StaticContentEntity.countAll", query = "SELECT COUNT(x) FROM StaticContentEntity x") })
public class StaticContentEntity implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "content_id", nullable = false)
	private Long contentId;

	@Column(name = "contentname", nullable = false, length = 100)
	private String contentname;

	@Column(name = "contentpath", nullable = false, length = 100)
	private String contentpath;

	@Column(name = "httpcontenttype", nullable = false, length = 100)
	private String httpcontenttype;

	@Column(name = "extension", nullable = false, length = 50)
	private String extension;

	@Column(name = "server_id", nullable = false, length = 50)
	private String serverId;

	@Column(name = "version", nullable = false)
	private Long version;

	@ManyToMany(mappedBy = "listOfStaticContent", targetEntity = PackageEntity.class)
	@LazyCollection(LazyCollectionOption.FALSE)
	private Set<PackageEntity> listOfPackage;

	// @OneToMany(mappedBy = "staticContent", targetEntity = UsersEntity.class)
	// private List<UsersEntity> listOfUsers;

	public StaticContentEntity() {
		super();
	}

	public void setContentId(Long contentId) {
		this.contentId = contentId;
	}

	public Long getContentId() {
		return this.contentId;
	}

	public void setContentname(String contentname) {
		this.contentname = contentname;
	}

	public String getContentname() {
		return this.contentname;
	}

	public void setContentpath(String contentpath) {
		this.contentpath = contentpath;
	}

	public String getContentpath() {
		return this.contentpath;
	}

	public void setHttpcontenttype(String httpcontenttype) {
		this.httpcontenttype = httpcontenttype;
	}

	public String getHttpcontenttype() {
		return this.httpcontenttype;
	}

	public void setExtension(String extension) {
		this.extension = extension;
	}

	public String getExtension() {
		return this.extension;
	}

	public void setServerId(String serverId) {
		this.serverId = serverId;
	}

	public String getServerId() {
		return this.serverId;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	public Long getVersion() {
		return this.version;
	}

	public Set<PackageEntity> getListOfPackage() {
		return listOfPackage;
	}

	public void setListOfPackage(Set<PackageEntity> listOfPackage) {
		this.listOfPackage = listOfPackage;
	}

}
